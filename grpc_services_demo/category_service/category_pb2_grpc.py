# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from grpc_services_demo.category_service import category_pb2 as grpc__services__demo_dot_protos_dot_category__pb2


class CategoryStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.Search = channel.unary_unary(
            '/Category/Search',
            request_serializer=grpc__services__demo_dot_protos_dot_category__pb2.CategoryRequest.SerializeToString,
            response_deserializer=grpc__services__demo_dot_protos_dot_category__pb2.CategoryReply.FromString,
        )


class CategoryServicer(object):
    """The greeting service definition.
    """

    def Search(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CategoryServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Search': grpc.unary_unary_rpc_method_handler(
            servicer.Search,
            request_deserializer=grpc__services__demo_dot_protos_dot_category__pb2.CategoryRequest.FromString,
            response_serializer=grpc__services__demo_dot_protos_dot_category__pb2.CategoryReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'Category', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
